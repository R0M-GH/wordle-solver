{"version":3,"sources":["words.txt","components/Word.jsx","components/Instructions.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Word","props","letters","i","tmp","words","index","value","charAt","color","push","boxes","map","letter","react_default","a","createElement","Box","m","Button","style","fontSize","backgroundColor","maxWidth","maxHeight","minWidth","minHeight","margin","onClick","Object","toConsumableArray","setWords","handleClick","display","alignItems","justifyContent","Instructions","BootstrapDialog","styled","Dialog","_ref","theme","& .MuiDialogContent-root","padding","spacing","& .MuiDialogActions-root","BootstrapDialogTitle","children","onClose","other","objectWithoutProperties","DialogTitle","assign","sx","IconButton","aria-label","position","right","top","palette","grey","Close_default","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","handleClose","Box_Box","flexGrow","AppBar","Toolbar","Typography","variant","component","aria-labelledby","id","DialogContent","dividers","gutterBottom","DialogActions","autoFocus","allWords","fetch","raw","then","r","text","split","App","_useState","_useState2","green","yellow","gray","wo","word","className","textAlign","t","forEach","j","g","length","includes","populateColors","b","y","w","concat","disableElevation","window","location","reload","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.17e4035c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/words.3381988a.txt\";","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function Word(props) {\r\n\tlet letters = [];\r\n\tfor (let i = 0; i < 5; i++) {\r\n\t\tlet tmp = [props.words[props.index].value.charAt(i)];\r\n\t\tif (props.words[props.index].color[i] == 0) {\r\n\t\t\ttmp.push(\"gray\");\r\n\t\t} else if (props.words[props.index].color[i] == 1) {\r\n\t\t\ttmp.push(\"yellow\");\r\n\t\t} else {\r\n\t\t\ttmp.push(\"green\");\r\n\t\t}\r\n\t\ttmp.push(i);\r\n\t\tletters.push(tmp);\r\n\t}\r\n\tfunction handleClick(i) {\r\n\t\tlet tmp = [...props.words];\r\n\t\tif (tmp[props.index].color[i] == 2) {\r\n\t\t\ttmp[props.index].color[i] = 0\r\n\t\t} else {\r\n\t\t\ttmp[props.index].color[i] += 1\r\n\t\t}\r\n\t\tprops.setWords(tmp)\r\n\t}\r\n\tconst boxes = letters.map((letter) => (\r\n\t\t<Box m={1}>\r\n\t\t\t<Button\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tfontSize: \"63px\",\r\n\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\tbackgroundColor: letter[1],\r\n\t\t\t\t\tmaxWidth: \"100px\",\r\n\t\t\t\t\tmaxHeight: \"100px\",\r\n\t\t\t\t\tminWidth: \"100px\",\r\n\t\t\t\t\tminHeight: \"100px\",\r\n\t\t\t\t\tmargin: \"5\"\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => handleClick(letter[2])}\r\n\t\t\t>\r\n\t\t\t\t{letter[0]}\r\n\t\t\t</Button>\r\n\t\t</Box>\r\n\r\n\t));\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{boxes}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nexport default function Instructions() {\r\n\tconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n\t\t\"& .MuiDialogContent-root\": {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t},\r\n\t\t\"& .MuiDialogActions-root\": {\r\n\t\t\tpadding: theme.spacing(1),\r\n\t\t},\r\n\t}));\r\n\r\n\tconst BootstrapDialogTitle = (props) => {\r\n\t\tconst { children, onClose, ...other } = props;\r\n\r\n\t\treturn (\r\n\t\t\t<DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n\t\t\t\t{children}\r\n\t\t\t\t{onClose ? (\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\tright: 8,\r\n\t\t\t\t\t\t\ttop: 8,\r\n\t\t\t\t\t\t\tcolor: (theme) => theme.palette.grey[500],\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t) : null}\r\n\t\t\t</DialogTitle>\r\n\t\t);\r\n\t};\r\n\r\n\tBootstrapDialogTitle.propTypes = {\r\n\t\tchildren: PropTypes.node,\r\n\t\tonClose: PropTypes.func.isRequired,\r\n\t};\r\n\tconst [open, setOpen] = React.useState(true);\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Box sx={{ flexGrow: 1 }}>\r\n\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t<Toolbar>\r\n\r\n\t\t\t\t\t\t<Box sx={{ flexGrow: 1 }} >\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" component=\"div\" >\r\n\t\t\t\t\t\t\t\tWordle Solver\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Button color=\"inherit\" onClick={handleOpen}>Show Instructions</Button>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</Box>\r\n\t\t\t<BootstrapDialog\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\taria-labelledby=\"customized-dialog-title\"\r\n\t\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\t<BootstrapDialogTitle\r\n\t\t\t\t\tid=\"customized-dialog-title\"\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t>\r\n\t\t\t\t\tInstructions\r\n\t\t\t\t</BootstrapDialogTitle>\r\n\t\t\t\t<DialogContent dividers>\r\n\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\tTo use this wordle solver, first type in audio and crest into your wordle game. Then match the colors in the game with the solver, by clicking on each of the letters. After that, click the Add button to generate a prediction. Repeat this until you win.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button autoFocus onClick={handleClose}>\r\n\t\t\t\t\t\tStart\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</BootstrapDialog>\r\n\t\t</div>\r\n\t);\r\n}","import TextField from \"@mui/material/TextField\";\r\nimport { Button } from \"@mui/material\";\r\nimport { FormGroup } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Word from \"./components/Word\";\r\nimport Instructions from \"./components/Instructions\";\r\nimport raw from \"./words.txt\";\r\nimport Box from '@mui/material/Box';\r\n\r\nlet allWords = [];\r\nfetch(raw)\r\n\t.then((r) => r.text())\r\n\t.then((text) => {\r\n\t\tallWords = text.split(\"\\n\");\r\n\t});\r\nfunction App() {\r\n\tconst [words, setWords] = useState([\r\n\t\t{ value: \"audio\", color: [0, 0, 0, 0, 0], i: 0 },\r\n\t\t{ value: \"crest\", color: [0, 0, 0, 0, 0], i: 1 },\r\n\t]);\r\n\tlet green = [];\r\n\tlet yellow = [];\r\n\tlet gray = [];\r\n\r\n\tconst wo = words.map((word) => (\r\n\t\t<Word words={words} setWords={setWords} index={word.i} />\r\n\t));\r\n\r\n\tfunction populateColors() {\r\n\t\tgreen = [];\r\n\t\tyellow = [];\r\n\t\tgray = [];\r\n\t\tlet t = [];\r\n\t\twords.forEach((word) => {\r\n\t\t\tfor (let j = 0; j < 5; j++) {\r\n\t\t\t\tif (word.color[j] == 0) {\r\n\t\t\t\t\tgray.push(word.value.charAt(j));\r\n\t\t\t\t} else if (word.color[j] == 1) {\r\n\t\t\t\t\tyellow.push(word.value.charAt(j));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgreen.push([word.value.charAt(j), j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let g = 0; g < gray.length; g++) {\r\n\t\t\tif (green.includes(gray[g]) || yellow.includes(gray[g])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tt.push(gray[g]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgray = t;\r\n\t}\r\n\r\n\tfunction makePrediction() {\r\n\t\tpopulateColors();\r\n\t\tfor (let word = 0; word < allWords.length; word++) {\r\n\t\t\tlet b = false;\r\n\t\t\tfor (let g = 0; g < gray.length; g++) {\r\n\t\t\t\tif (allWords[word].includes(gray[g])) {\r\n\t\t\t\t\tb = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (b) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (let y = 0; y < yellow.length; y++) {\r\n\t\t\t\tif (allWords[word].includes(yellow[y]) == false) {\r\n\t\t\t\t\tb = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (b) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (let g = 0; g < green.length; g++) {\r\n\t\t\t\tif (allWords[word].charAt(green[g][1]) != green[g][0]) {\r\n\t\t\t\t\tb = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (b) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (let w = 0; w < words.length; w++) {\r\n\t\t\t\tif (words[w].value == allWords[word]) {\r\n\t\t\t\t\tb = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (b) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tsetWords([\r\n\t\t\t\t...words,\r\n\t\t\t\t{ value: allWords[word], color: [0, 0, 0, 0, 0], i: words.length },\r\n\t\t\t]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction restart() {\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Instructions />\r\n\t\t\t{wo}\r\n\t\t\t<Box textAlign=\"center\">\r\n\t\t\t\t<div className=\"d-grip gap-2\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={makePrediction}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmaxWidth: \"280px\",\r\n\t\t\t\t\t\t\tmaxHeight: \"100px\",\r\n\t\t\t\t\t\t\tminWidth: \"280px\",\r\n\t\t\t\t\t\t\tminHeight: \"100px\",\r\n\t\t\t\t\t\t\tfontSize: \"40px\",\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</Button>{'\\n'}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={restart}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmaxWidth: \"280px\",\r\n\t\t\t\t\t\t\tmaxHeight: \"100px\",\r\n\t\t\t\t\t\t\tminWidth: \"280px\",\r\n\t\t\t\t\t\t\tminHeight: \"100px\",\r\n\t\t\t\t\t\t\tfontSize: \"40px\",\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRestart\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Box>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}